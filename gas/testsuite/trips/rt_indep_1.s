; Test:		rt_indep_1
; Author:	Ramadass Nagarajan
; Purpose:	Checks if independence across blocks is enforced
;
; 		Loop has one block that reads 32 registers and writes
; 		32 other registers.
;
; Note:		Test generated by a script and not intended to test tsim_arch
;
; Final result should be 0x47



.set SYS_EXIT=1

.data

;; define memory locations for some variables
index:	
	.quad 0x10
num:	
	.quad 0x100

.text
.global _start

;;  set loop count to 16, and clear index
.bbegin _start

N[0] movi 25 N[3,1]
N[1] genu %lo(num) N[2]
N[2] app %bottom(num) N[3,0]
N[3] sw	0

N[4] movi 0 N[7,1]
N[5] genu %lo(index) N[6]
N[6] app %bottom(index) N[7,0]
N[7] sw	0

N[8] bro init0
.bend

.bbegin init0

N[0] movi 0 W[0]
N[1] movi 1 W[1]
N[2] movi 2 W[2]
N[3] movi 3 W[3]
N[4] movi 4 W[4]
N[5] movi 5 W[5]
N[6] movi 6 W[6]
N[7] movi 7 W[7]
N[8] movi 8 W[8]
N[9] movi 9 W[9]
N[10] movi 10 W[10]
N[11] movi 11 W[11]
N[12] movi 12 W[12]
N[13] movi 13 W[13]
N[14] movi 14 W[14]
N[15] movi 15 W[15]
N[16] movi 16 W[16]
N[17] movi 17 W[17]
N[18] movi 18 W[18]
N[19] movi 19 W[19]
N[20] movi 20 W[20]
N[21] movi 21 W[21]
N[22] movi 22 W[22]
N[23] movi 23 W[23]
N[24] movi 24 W[24]
N[25] movi 25 W[25]
N[26] movi 26 W[26]
N[27] movi 27 W[27]
N[28] movi 28 W[28]
N[29] movi 29 W[29]
N[30] movi 30 W[30]
N[31] movi 31 W[31]
N[127] bro init1

W[0] write G[0]
W[1] write G[1]
W[2] write G[2]
W[3] write G[3]
W[4] write G[4]
W[5] write G[5]
W[6] write G[6]
W[7] write G[7]
W[8] write G[8]
W[9] write G[9]
W[10] write G[10]
W[11] write G[11]
W[12] write G[12]
W[13] write G[13]
W[14] write G[14]
W[15] write G[15]
W[16] write G[16]
W[17] write G[17]
W[18] write G[18]
W[19] write G[19]
W[20] write G[20]
W[21] write G[21]
W[22] write G[22]
W[23] write G[23]
W[24] write G[24]
W[25] write G[25]
W[26] write G[26]
W[27] write G[27]
W[28] write G[28]
W[29] write G[29]
W[30] write G[30]
W[31] write G[31]
.bend

.bbegin init1

N[0] movi 32 W[0]
N[1] movi 33 W[1]
N[2] movi 34 W[2]
N[3] movi 35 W[3]
N[4] movi 36 W[4]
N[5] movi 37 W[5]
N[6] movi 38 W[6]
N[7] movi 39 W[7]
N[8] movi 40 W[8]
N[9] movi 41 W[9]
N[10] movi 42 W[10]
N[11] movi 43 W[11]
N[12] movi 44 W[12]
N[13] movi 45 W[13]
N[14] movi 46 W[14]
N[15] movi 47 W[15]
N[16] movi 48 W[16]
N[17] movi 49 W[17]
N[18] movi 50 W[18]
N[19] movi 51 W[19]
N[20] movi 52 W[20]
N[21] movi 53 W[21]
N[22] movi 54 W[22]
N[23] movi 55 W[23]
N[24] movi 56 W[24]
N[25] movi 57 W[25]
N[26] movi 58 W[26]
N[27] movi 59 W[27]
N[28] movi 60 W[28]
N[29] movi 61 W[29]
N[30] movi 62 W[30]
N[31] movi 63 W[31]
N[127] bro init2

W[0] write G[32]
W[1] write G[33]
W[2] write G[34]
W[3] write G[35]
W[4] write G[36]
W[5] write G[37]
W[6] write G[38]
W[7] write G[39]
W[8] write G[40]
W[9] write G[41]
W[10] write G[42]
W[11] write G[43]
W[12] write G[44]
W[13] write G[45]
W[14] write G[46]
W[15] write G[47]
W[16] write G[48]
W[17] write G[49]
W[18] write G[50]
W[19] write G[51]
W[20] write G[52]
W[21] write G[53]
W[22] write G[54]
W[23] write G[55]
W[24] write G[56]
W[25] write G[57]
W[26] write G[58]
W[27] write G[59]
W[28] write G[60]
W[29] write G[61]
W[30] write G[62]
W[31] write G[63]
.bend

.bbegin init2

N[0] movi 64 W[0]
N[1] movi 65 W[1]
N[2] movi 66 W[2]
N[3] movi 67 W[3]
N[4] movi 68 W[4]
N[5] movi 69 W[5]
N[6] movi 70 W[6]
N[7] movi 71 W[7]
N[8] movi 72 W[8]
N[9] movi 73 W[9]
N[10] movi 74 W[10]
N[11] movi 75 W[11]
N[12] movi 76 W[12]
N[13] movi 77 W[13]
N[14] movi 78 W[14]
N[15] movi 79 W[15]
N[16] movi 80 W[16]
N[17] movi 81 W[17]
N[18] movi 82 W[18]
N[19] movi 83 W[19]
N[20] movi 84 W[20]
N[21] movi 85 W[21]
N[22] movi 86 W[22]
N[23] movi 87 W[23]
N[24] movi 88 W[24]
N[25] movi 89 W[25]
N[26] movi 90 W[26]
N[27] movi 91 W[27]
N[28] movi 92 W[28]
N[29] movi 93 W[29]
N[30] movi 94 W[30]
N[31] movi 95 W[31]
N[127] bro init3

W[0] write G[64]
W[1] write G[65]
W[2] write G[66]
W[3] write G[67]
W[4] write G[68]
W[5] write G[69]
W[6] write G[70]
W[7] write G[71]
W[8] write G[72]
W[9] write G[73]
W[10] write G[74]
W[11] write G[75]
W[12] write G[76]
W[13] write G[77]
W[14] write G[78]
W[15] write G[79]
W[16] write G[80]
W[17] write G[81]
W[18] write G[82]
W[19] write G[83]
W[20] write G[84]
W[21] write G[85]
W[22] write G[86]
W[23] write G[87]
W[24] write G[88]
W[25] write G[89]
W[26] write G[90]
W[27] write G[91]
W[28] write G[92]
W[29] write G[93]
W[30] write G[94]
W[31] write G[95]
.bend

.bbegin init3

N[0] movi 96 W[0]
N[1] movi 97 W[1]
N[2] movi 98 W[2]
N[3] movi 99 W[3]
N[4] movi 100 W[4]
N[5] movi 101 W[5]
N[6] movi 102 W[6]
N[7] movi 103 W[7]
N[8] movi 104 W[8]
N[9] movi 105 W[9]
N[10] movi 106 W[10]
N[11] movi 107 W[11]
N[12] movi 108 W[12]
N[13] movi 109 W[13]
N[14] movi 110 W[14]
N[15] movi 111 W[15]
N[16] movi 112 W[16]
N[17] movi 113 W[17]
N[18] movi 114 W[18]
N[19] movi 115 W[19]
N[20] movi 116 W[20]
N[21] movi 117 W[21]
N[22] movi 118 W[22]
N[23] movi 119 W[23]
N[24] movi 120 W[24]
N[25] movi 121 W[25]
N[26] movi 122 W[26]
N[27] movi 123 W[27]
N[28] movi 124 W[28]
N[29] movi 125 W[29]
N[30] movi 126 W[30]
N[31] movi 127 W[31]
N[127] bro block0

W[0] write G[96]
W[1] write G[97]
W[2] write G[98]
W[3] write G[99]
W[4] write G[100]
W[5] write G[101]
W[6] write G[102]
W[7] write G[103]
W[8] write G[104]
W[9] write G[105]
W[10] write G[106]
W[11] write G[107]
W[12] write G[108]
W[13] write G[109]
W[14] write G[110]
W[15] write G[111]
W[16] write G[112]
W[17] write G[113]
W[18] write G[114]
W[19] write G[115]
W[20] write G[116]
W[21] write G[117]
W[22] write G[118]
W[23] write G[119]
W[24] write G[120]
W[25] write G[121]
W[26] write G[122]
W[27] write G[123]
W[28] write G[124]
W[29] write G[125]
W[30] write G[126]
W[31] write G[127]
.bend

.bbegin block0

R[0] read G[32] N[0] N[64]
R[1] read G[33] N[1] N[65]
R[2] read G[34] N[2] N[66]
R[3] read G[35] N[3] N[67]
R[4] read G[36] N[4] N[68]
R[5] read G[37] N[5] N[69]
R[6] read G[38] N[6] N[70]
R[7] read G[39] N[7] N[71]
R[8] read G[40] N[8] N[72]
R[9] read G[41] N[9] N[73]
R[10] read G[42] N[10] N[74]
R[11] read G[43] N[11] N[75]
R[12] read G[44] N[12] N[76]
R[13] read G[45] N[13] N[77]
R[14] read G[46] N[14] N[78]
R[15] read G[47] N[15] N[79]
R[16] read G[48] N[16] N[80]
R[17] read G[49] N[17] N[81]
R[18] read G[50] N[18] N[82]
R[19] read G[51] N[19] N[83]
R[20] read G[52] N[20] N[84]
R[21] read G[53] N[21] N[85]
R[22] read G[54] N[22] N[86]
R[23] read G[55] N[23] N[87]
R[24] read G[56] N[24] N[88]
R[25] read G[57] N[25] N[89]
R[26] read G[58] N[26] N[90]
R[27] read G[59] N[27] N[91]
R[28] read G[60] N[28] N[92]
R[29] read G[61] N[29] N[93]
R[30] read G[62] N[30] N[94]
R[31] read G[63] N[31] N[95]
N[0] addi 1 N[64,1]
N[64] add W[0]
N[1] addi 1 N[65,1]
N[65] add W[1]
N[2] addi 1 N[66,1]
N[66] add W[2]
N[3] addi 1 N[67,1]
N[67] add W[3]
N[4] addi 1 N[68,1]
N[68] add W[4]
N[5] addi 1 N[69,1]
N[69] add W[5]
N[6] addi 1 N[70,1]
N[70] add W[6]
N[7] addi 1 N[71,1]
N[71] add W[7]
N[8] addi 1 N[72,1]
N[72] add W[8]
N[9] addi 1 N[73,1]
N[73] add W[9]
N[10] addi 1 N[74,1]
N[74] add W[10]
N[11] addi 1 N[75,1]
N[75] add W[11]
N[12] addi 1 N[76,1]
N[76] add W[12]
N[13] addi 1 N[77,1]
N[77] add W[13]
N[14] addi 1 N[78,1]
N[78] add W[14]
N[15] addi 1 N[79,1]
N[79] add W[15]
N[16] addi 1 N[80,1]
N[80] add W[16]
N[17] addi 1 N[81,1]
N[81] add W[17]
N[18] addi 1 N[82,1]
N[82] add W[18]
N[19] addi 1 N[83,1]
N[83] add W[19]
N[20] addi 1 N[84,1]
N[84] add W[20]
N[21] addi 1 N[85,1]
N[85] add W[21]
N[22] addi 1 N[86,1]
N[86] add W[22]
N[23] addi 1 N[87,1]
N[87] add W[23]
N[24] addi 1 N[88,1]
N[88] add W[24]
N[25] addi 1 N[89,1]
N[89] add W[25]
N[26] addi 1 N[90,1]
N[90] add W[26]
N[27] addi 1 N[91,1]
N[91] add W[27]
N[28] addi 1 N[92,1]
N[92] add W[28]
N[29] addi 1 N[93,1]
N[93] add W[29]
N[30] addi 1 N[94,1]
N[94] add W[30]
N[31] addi 1 N[95,1]
N[95] add W[31]


;;  read loop count
N[96] genu %lo(num) N[97]
N[97] app %bottom(num) N[98]
N[98] lw 0 N[105,0]
    
;; read index
N[99] genu %lo(index) N[100]
N[100] app %bottom(index) N[101]
N[101] mov N[102] N[108,0]
N[102] lw 0 N[103]	
    
;;  add 1 to loop index
N[103] addi 1 N[104]
N[104] mov N[105,1] N[108,1]
    
;;  test if loop count is reached
N[105] teq N[106,P] N[107,P]
    
N[106] bro_f block0

N[107] bro_t _start1

;;  write loop index
N[108] sw 0
W[0] write G[0]
W[1] write G[1]
W[2] write G[2]
W[3] write G[3]
W[4] write G[4]
W[5] write G[5]
W[6] write G[6]
W[7] write G[7]
W[8] write G[8]
W[9] write G[9]
W[10] write G[10]
W[11] write G[11]
W[12] write G[12]
W[13] write G[13]
W[14] write G[14]
W[15] write G[15]
W[16] write G[16]
W[17] write G[17]
W[18] write G[18]
W[19] write G[19]
W[20] write G[20]
W[21] write G[21]
W[22] write G[22]
W[23] write G[23]
W[24] write G[24]
W[25] write G[25]
W[26] write G[26]
W[27] write G[27]
W[28] write G[28]
W[29] write G[29]
W[30] write G[30]
W[31] write G[31]
.bend


.bbegin _start1

N[0] movi 25 N[3,1]
N[1] genu %lo(num) N[2]
N[2] app %bottom(num) N[3,0]
N[3] sw	0

N[4] movi 0 N[7,1]
N[5] genu %lo(index) N[6]
N[6] app %bottom(index) N[7,0]
N[7] sw	0

N[8] bro block1
.bend

.bbegin block1

R[0] read G[64] N[0] N[64]
R[1] read G[65] N[1] N[65]
R[2] read G[66] N[2] N[66]
R[3] read G[67] N[3] N[67]
R[4] read G[68] N[4] N[68]
R[5] read G[69] N[5] N[69]
R[6] read G[70] N[6] N[70]
R[7] read G[71] N[7] N[71]
R[8] read G[72] N[8] N[72]
R[9] read G[73] N[9] N[73]
R[10] read G[74] N[10] N[74]
R[11] read G[75] N[11] N[75]
R[12] read G[76] N[12] N[76]
R[13] read G[77] N[13] N[77]
R[14] read G[78] N[14] N[78]
R[15] read G[79] N[15] N[79]
R[16] read G[80] N[16] N[80]
R[17] read G[81] N[17] N[81]
R[18] read G[82] N[18] N[82]
R[19] read G[83] N[19] N[83]
R[20] read G[84] N[20] N[84]
R[21] read G[85] N[21] N[85]
R[22] read G[86] N[22] N[86]
R[23] read G[87] N[23] N[87]
R[24] read G[88] N[24] N[88]
R[25] read G[89] N[25] N[89]
R[26] read G[90] N[26] N[90]
R[27] read G[91] N[27] N[91]
R[28] read G[92] N[28] N[92]
R[29] read G[93] N[29] N[93]
R[30] read G[94] N[30] N[94]
R[31] read G[95] N[31] N[95]
N[0] addi 1 N[64,1]
N[64] add W[0]
N[1] addi 1 N[65,1]
N[65] add W[1]
N[2] addi 1 N[66,1]
N[66] add W[2]
N[3] addi 1 N[67,1]
N[67] add W[3]
N[4] addi 1 N[68,1]
N[68] add W[4]
N[5] addi 1 N[69,1]
N[69] add W[5]
N[6] addi 1 N[70,1]
N[70] add W[6]
N[7] addi 1 N[71,1]
N[71] add W[7]
N[8] addi 1 N[72,1]
N[72] add W[8]
N[9] addi 1 N[73,1]
N[73] add W[9]
N[10] addi 1 N[74,1]
N[74] add W[10]
N[11] addi 1 N[75,1]
N[75] add W[11]
N[12] addi 1 N[76,1]
N[76] add W[12]
N[13] addi 1 N[77,1]
N[77] add W[13]
N[14] addi 1 N[78,1]
N[78] add W[14]
N[15] addi 1 N[79,1]
N[79] add W[15]
N[16] addi 1 N[80,1]
N[80] add W[16]
N[17] addi 1 N[81,1]
N[81] add W[17]
N[18] addi 1 N[82,1]
N[82] add W[18]
N[19] addi 1 N[83,1]
N[83] add W[19]
N[20] addi 1 N[84,1]
N[84] add W[20]
N[21] addi 1 N[85,1]
N[85] add W[21]
N[22] addi 1 N[86,1]
N[86] add W[22]
N[23] addi 1 N[87,1]
N[87] add W[23]
N[24] addi 1 N[88,1]
N[88] add W[24]
N[25] addi 1 N[89,1]
N[89] add W[25]
N[26] addi 1 N[90,1]
N[90] add W[26]
N[27] addi 1 N[91,1]
N[91] add W[27]
N[28] addi 1 N[92,1]
N[92] add W[28]
N[29] addi 1 N[93,1]
N[93] add W[29]
N[30] addi 1 N[94,1]
N[94] add W[30]
N[31] addi 1 N[95,1]
N[95] add W[31]


;;  read loop count
N[96] genu %lo(num) N[97]
N[97] app %bottom(num) N[98]
N[98] lw 0 N[105,0]
    
;; read index
N[99] genu %lo(index) N[100]
N[100] app %bottom(index) N[101]
N[101] mov N[102] N[108,0]
N[102] lw 0 N[103]	
    
;;  add 1 to loop index
N[103] addi 1 N[104]
N[104] mov N[105,1] N[108,1]
    
;;  test if loop count is reached
N[105] teq N[106,P] N[107,P]
    
N[106] bro_f block1

N[107] bro_t _start2

;;  write loop index
N[108] sw 0
W[0] write G[32]
W[1] write G[33]
W[2] write G[34]
W[3] write G[35]
W[4] write G[36]
W[5] write G[37]
W[6] write G[38]
W[7] write G[39]
W[8] write G[40]
W[9] write G[41]
W[10] write G[42]
W[11] write G[43]
W[12] write G[44]
W[13] write G[45]
W[14] write G[46]
W[15] write G[47]
W[16] write G[48]
W[17] write G[49]
W[18] write G[50]
W[19] write G[51]
W[20] write G[52]
W[21] write G[53]
W[22] write G[54]
W[23] write G[55]
W[24] write G[56]
W[25] write G[57]
W[26] write G[58]
W[27] write G[59]
W[28] write G[60]
W[29] write G[61]
W[30] write G[62]
W[31] write G[63]
.bend


.bbegin _start2

N[0] movi 25 N[3,1]
N[1] genu %lo(num) N[2]
N[2] app %bottom(num) N[3,0]
N[3] sw	0

N[4] movi 0 N[7,1]
N[5] genu %lo(index) N[6]
N[6] app %bottom(index) N[7,0]
N[7] sw	0

N[8] bro block2
.bend

.bbegin block2

R[0] read G[96] N[0] N[64]
R[1] read G[97] N[1] N[65]
R[2] read G[98] N[2] N[66]
R[3] read G[99] N[3] N[67]
R[4] read G[100] N[4] N[68]
R[5] read G[101] N[5] N[69]
R[6] read G[102] N[6] N[70]
R[7] read G[103] N[7] N[71]
R[8] read G[104] N[8] N[72]
R[9] read G[105] N[9] N[73]
R[10] read G[106] N[10] N[74]
R[11] read G[107] N[11] N[75]
R[12] read G[108] N[12] N[76]
R[13] read G[109] N[13] N[77]
R[14] read G[110] N[14] N[78]
R[15] read G[111] N[15] N[79]
R[16] read G[112] N[16] N[80]
R[17] read G[113] N[17] N[81]
R[18] read G[114] N[18] N[82]
R[19] read G[115] N[19] N[83]
R[20] read G[116] N[20] N[84]
R[21] read G[117] N[21] N[85]
R[22] read G[118] N[22] N[86]
R[23] read G[119] N[23] N[87]
R[24] read G[120] N[24] N[88]
R[25] read G[121] N[25] N[89]
R[26] read G[122] N[26] N[90]
R[27] read G[123] N[27] N[91]
R[28] read G[124] N[28] N[92]
R[29] read G[125] N[29] N[93]
R[30] read G[126] N[30] N[94]
R[31] read G[127] N[31] N[95]
N[0] addi 1 N[64,1]
N[64] add W[0]
N[1] addi 1 N[65,1]
N[65] add W[1]
N[2] addi 1 N[66,1]
N[66] add W[2]
N[3] addi 1 N[67,1]
N[67] add W[3]
N[4] addi 1 N[68,1]
N[68] add W[4]
N[5] addi 1 N[69,1]
N[69] add W[5]
N[6] addi 1 N[70,1]
N[70] add W[6]
N[7] addi 1 N[71,1]
N[71] add W[7]
N[8] addi 1 N[72,1]
N[72] add W[8]
N[9] addi 1 N[73,1]
N[73] add W[9]
N[10] addi 1 N[74,1]
N[74] add W[10]
N[11] addi 1 N[75,1]
N[75] add W[11]
N[12] addi 1 N[76,1]
N[76] add W[12]
N[13] addi 1 N[77,1]
N[77] add W[13]
N[14] addi 1 N[78,1]
N[78] add W[14]
N[15] addi 1 N[79,1]
N[79] add W[15]
N[16] addi 1 N[80,1]
N[80] add W[16]
N[17] addi 1 N[81,1]
N[81] add W[17]
N[18] addi 1 N[82,1]
N[82] add W[18]
N[19] addi 1 N[83,1]
N[83] add W[19]
N[20] addi 1 N[84,1]
N[84] add W[20]
N[21] addi 1 N[85,1]
N[85] add W[21]
N[22] addi 1 N[86,1]
N[86] add W[22]
N[23] addi 1 N[87,1]
N[87] add W[23]
N[24] addi 1 N[88,1]
N[88] add W[24]
N[25] addi 1 N[89,1]
N[89] add W[25]
N[26] addi 1 N[90,1]
N[90] add W[26]
N[27] addi 1 N[91,1]
N[91] add W[27]
N[28] addi 1 N[92,1]
N[92] add W[28]
N[29] addi 1 N[93,1]
N[93] add W[29]
N[30] addi 1 N[94,1]
N[94] add W[30]
N[31] addi 1 N[95,1]
N[95] add W[31]


;;  read loop count
N[96] genu %lo(num) N[97]
N[97] app %bottom(num) N[98]
N[98] lw 0 N[105,0]
    
;; read index
N[99] genu %lo(index) N[100]
N[100] app %bottom(index) N[101]
N[101] mov N[102] N[108,0]
N[102] lw 0 N[103]	
    
;;  add 1 to loop index
N[103] addi 1 N[104]
N[104] mov N[105,1] N[108,1]
    
;;  test if loop count is reached
N[105] teq N[106,P] N[107,P]
    
N[106] bro_f block2

N[107] bro_t _start3

;;  write loop index
N[108] sw 0
W[0] write G[64]
W[1] write G[65]
W[2] write G[66]
W[3] write G[67]
W[4] write G[68]
W[5] write G[69]
W[6] write G[70]
W[7] write G[71]
W[8] write G[72]
W[9] write G[73]
W[10] write G[74]
W[11] write G[75]
W[12] write G[76]
W[13] write G[77]
W[14] write G[78]
W[15] write G[79]
W[16] write G[80]
W[17] write G[81]
W[18] write G[82]
W[19] write G[83]
W[20] write G[84]
W[21] write G[85]
W[22] write G[86]
W[23] write G[87]
W[24] write G[88]
W[25] write G[89]
W[26] write G[90]
W[27] write G[91]
W[28] write G[92]
W[29] write G[93]
W[30] write G[94]
W[31] write G[95]
.bend


.bbegin _start3

N[0] movi 25 N[3,1]
N[1] genu %lo(num) N[2]
N[2] app %bottom(num) N[3,0]
N[3] sw	0

N[4] movi 0 N[7,1]
N[5] genu %lo(index) N[6]
N[6] app %bottom(index) N[7,0]
N[7] sw	0

N[8] bro block3
.bend

.bbegin block3

R[0] read G[0] N[0] N[64]
R[1] read G[1] N[1] N[65]
R[2] read G[2] N[2] N[66]
R[3] read G[3] N[3] N[67]
R[4] read G[4] N[4] N[68]
R[5] read G[5] N[5] N[69]
R[6] read G[6] N[6] N[70]
R[7] read G[7] N[7] N[71]
R[8] read G[8] N[8] N[72]
R[9] read G[9] N[9] N[73]
R[10] read G[10] N[10] N[74]
R[11] read G[11] N[11] N[75]
R[12] read G[12] N[12] N[76]
R[13] read G[13] N[13] N[77]
R[14] read G[14] N[14] N[78]
R[15] read G[15] N[15] N[79]
R[16] read G[16] N[16] N[80]
R[17] read G[17] N[17] N[81]
R[18] read G[18] N[18] N[82]
R[19] read G[19] N[19] N[83]
R[20] read G[20] N[20] N[84]
R[21] read G[21] N[21] N[85]
R[22] read G[22] N[22] N[86]
R[23] read G[23] N[23] N[87]
R[24] read G[24] N[24] N[88]
R[25] read G[25] N[25] N[89]
R[26] read G[26] N[26] N[90]
R[27] read G[27] N[27] N[91]
R[28] read G[28] N[28] N[92]
R[29] read G[29] N[29] N[93]
R[30] read G[30] N[30] N[94]
R[31] read G[31] N[31] N[95]
N[0] addi 1 N[64,1]
N[64] add W[0]
N[1] addi 1 N[65,1]
N[65] add W[1]
N[2] addi 1 N[66,1]
N[66] add W[2]
N[3] addi 1 N[67,1]
N[67] add W[3]
N[4] addi 1 N[68,1]
N[68] add W[4]
N[5] addi 1 N[69,1]
N[69] add W[5]
N[6] addi 1 N[70,1]
N[70] add W[6]
N[7] addi 1 N[71,1]
N[71] add W[7]
N[8] addi 1 N[72,1]
N[72] add W[8]
N[9] addi 1 N[73,1]
N[73] add W[9]
N[10] addi 1 N[74,1]
N[74] add W[10]
N[11] addi 1 N[75,1]
N[75] add W[11]
N[12] addi 1 N[76,1]
N[76] add W[12]
N[13] addi 1 N[77,1]
N[77] add W[13]
N[14] addi 1 N[78,1]
N[78] add W[14]
N[15] addi 1 N[79,1]
N[79] add W[15]
N[16] addi 1 N[80,1]
N[80] add W[16]
N[17] addi 1 N[81,1]
N[81] add W[17]
N[18] addi 1 N[82,1]
N[82] add W[18]
N[19] addi 1 N[83,1]
N[83] add W[19]
N[20] addi 1 N[84,1]
N[84] add W[20]
N[21] addi 1 N[85,1]
N[85] add W[21]
N[22] addi 1 N[86,1]
N[86] add W[22]
N[23] addi 1 N[87,1]
N[87] add W[23]
N[24] addi 1 N[88,1]
N[88] add W[24]
N[25] addi 1 N[89,1]
N[89] add W[25]
N[26] addi 1 N[90,1]
N[90] add W[26]
N[27] addi 1 N[91,1]
N[91] add W[27]
N[28] addi 1 N[92,1]
N[92] add W[28]
N[29] addi 1 N[93,1]
N[93] add W[29]
N[30] addi 1 N[94,1]
N[94] add W[30]
N[31] addi 1 N[95,1]
N[95] add W[31]


;;  read loop count
N[96] genu %lo(num) N[97]
N[97] app %bottom(num) N[98]
N[98] lw 0 N[105,0]
    
;; read index
N[99] genu %lo(index) N[100]
N[100] app %bottom(index) N[101]
N[101] mov N[102] N[108,0]
N[102] lw 0 N[103]	
    
;;  add 1 to loop index
N[103] addi 1 N[104]
N[104] mov N[105,1] N[108,1]
    
;;  test if loop count is reached
N[105] teq N[106,P] N[107,P]
    
N[106] bro_f block3

N[107] bro_t exit

;;  write loop index
N[108] sw 0
W[0] write G[96]
W[1] write G[97]
W[2] write G[98]
W[3] write G[99]
W[4] write G[100]
W[5] write G[101]
W[6] write G[102]
W[7] write G[103]
W[8] write G[104]
W[9] write G[105]
W[10] write G[106]
W[11] write G[107]
W[12] write G[108]
W[13] write G[109]
W[14] write G[110]
W[15] write G[111]
W[16] write G[112]
W[17] write G[113]
W[18] write G[114]
W[19] write G[115]
W[20] write G[116]
W[21] write G[117]
W[22] write G[118]
W[23] write G[119]
W[24] write G[120]
W[25] write G[121]
W[26] write G[122]
W[27] write G[123]
W[28] write G[124]
W[29] write G[125]
W[30] write G[126]
W[31] write G[127]
.bend

; exit block
.bbegin exit

N[8] movi SYS_EXIT W[0]
N[9] scall
    
W[0] write G[0]
    
.bend
